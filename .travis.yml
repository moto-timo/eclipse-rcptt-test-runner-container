# We need sudo for TUN/TAP
sudo: required

# We want Ubuntu 14.04 LTS
dist: trusty

env:
  global:
    - DISPLAY=:99.0

addons:
  apt:
    packages:
      - rpcbind
      - metacity

before_install:
  - wget http://autobuilder.yoctoproject.org/pub/releases/yocto-2.2.rc6/machines/qemu/qemux86/bzImage-qemux86.bin
  - wget http://autobuilder.yoctoproject.org/pub/releases/yocto-2.2.rc6/machines/qemu/qemux86/core-image-sato-sdk-qemux86.tar.bz2
  - wget http://autobuilder.yoctoproject.org/pub/releases/yocto-2.2.rc6/toolchain/x86_64/poky-glibc-x86_64-core-image-sato-i586-toolchain-2.2.sh

install:
  - mkdir -p $HOME/poky/2.2
  - chmod +x poky-glibc-x86_64-core-image-sato-i586-toolchain-2.2.sh
  - ./poky-glibc-x86_64-core-image-sato-i586-toolchain-2.2.sh -y -d $HOME/poky/2.2
  - source $HOME/poky/2.2/environment-setup-i586-poky-linux
  - runqemu-extract-sdk core-image-sato-sdk-qemux86.tar.bz2 $HOME/qemux86-2.2 

after_install:
  - sudo service portmap restart

before_script:
  - env
  - which runqemu
  - which python3
  - export SWT_GTK3=0
  - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1440x900x16
  - sh -e /etc/init.d/xvfb start
  - sleep 10

script:
  - runqemu bzImage-qemux86.bin $HOME/qemux86-2.2 nographic &
  - docker build -t crops/eclipse-rcptt-test-runner:neon-1a .
  - mkdir $HOME/workdir
  - docker run --rm -t -v /tmp/.X11-unix/X99:/tmp/.X11-unix/X99 -v $HOME/workdir:/workdir -e DISPLAY=$DISPLAY crops/eclipse-rcptt-test-runner:neon-1a --id $(id -u):$(id -g)
